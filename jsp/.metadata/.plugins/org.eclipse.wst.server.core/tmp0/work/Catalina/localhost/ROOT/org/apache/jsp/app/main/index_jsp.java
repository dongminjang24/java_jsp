/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.79
 * Generated at: 2023-09-11 14:09:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.app.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("    *, *:before, *:after { /* 모든 요소에 box-sizing 적용 */\n");
      out.write("        box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    html, body {\n");
      out.write("        padding: 0;\n");
      out.write("        margin: 0;\n");
      out.write("        height: 100%;\n");
      out.write("        width: 100%;\n");
      out.write("        font-family: 'Noto Sans KR', sans-serif;\n");
      out.write("        \n");
      out.write("    }\n");
      out.write("	.up-paper{\n");
      out.write("		background-color:#f2cea3;\n");
      out.write("		height:800px;\n");
      out.write("		margin: 0 auto;\n");
      out.write("		margin-top:30px;\n");
      out.write("		max-width:1280px;\n");
      out.write("		display:flex;\n");
      out.write("		flex-direction:column;\n");
      out.write("		justify-content:center;\n");
      out.write("		align-items:center;\n");
      out.write("		padding:40px 80px;\n");
      out.write("		\n");
      out.write("	}\n");
      out.write("	.down-paper{\n");
      out.write("		background-color:transparent;\n");
      out.write("		height:800px;\n");
      out.write("		margin: 0 auto;\n");
      out.write("		margin-top:60px;\n");
      out.write("		margin-bottom:80px;\n");
      out.write("		max-width:1280px;\n");
      out.write("		display:flex;\n");
      out.write("		flex-direction:column;\n");
      out.write("		justify-content:center;\n");
      out.write("		align-items:center;\n");
      out.write("		padding:40px 80px;\n");
      out.write("		border:1px solid #D9D9D9;\n");
      out.write("		border-radius:8px;\n");
      out.write("	}\n");
      out.write("	.card-items{\n");
      out.write("		background-color:white;	\n");
      out.write("		width:240px;\n");
      out.write("		height:240px;\n");
      out.write("		border-radius:8px;\n");
      out.write("	}\n");
      out.write("	 .line-clamp-2 {\n");
      out.write("	    -webkit-line-clamp: 2;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.text-sm{\n");
      out.write("		font-size:16px;\n");
      out.write("		font-weight:400;\n");
      out.write("	}\n");
      out.write("	.font-semibold {\n");
      out.write("    	font-weight: 600;\n");
      out.write("    	font-size:18px;\n");
      out.write("	}\n");
      out.write("	.my-1 {\n");
      out.write("	    margin-top: 0.25rem;\n");
      out.write("	    margin-bottom: 0.25rem;\n");
      out.write("	}\n");
      out.write("	.text-gray-400 {\n");
      out.write("    --tw-text-opacity: 1;\n");
      out.write("    color: rgb(153 153 153/var(--tw-text-opacity));\n");
      out.write("	}\n");
      out.write("	.text-sm {\n");
      out.write("	    font-size: .875rem;\n");
      out.write("	    line-height: 1.25rem;\n");
      out.write("	}\n");
      out.write(" </style>\n");
      out.write("<body>\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/app/fix/header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("	<div class=\"up-paper\">\n");
      out.write("		<div class=\"card-items\">\n");
      out.write("			\n");
      out.write("		</div>\n");
      out.write("		<h2 class=\"line-clamp-2 text-sm text-heading\">낼나 종이필름 아이패드 10.2인치(7,8,9세대)</h2>\n");
      out.write("		<div class=\"font-semibold text-heading\">9,000원</div>\n");
      out.write("		<div class=\"my-1\"><span class=\"text-sm text-gray-400\">평리1동</span><span class=\"text-sm text-gray-400 mx-1\">|</span><span class=\"text-sm text-gray-400\">18분 전</span></div>\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	<div class=\"down-paper\">\n");
      out.write("	\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

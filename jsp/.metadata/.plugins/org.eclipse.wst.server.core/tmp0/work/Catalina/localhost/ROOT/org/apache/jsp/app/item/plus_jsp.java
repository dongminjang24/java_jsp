/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.79
 * Generated at: 2023-09-20 15:06:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.app.item;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class plus_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:length", org.apache.taglibs.standard.functions.Functions.class, "length", new Class[] {java.lang.Object.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/Users/hidongmin37/web_1900_hds/jsp/cocoProject/src/main/webapp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1692876955000L));
    _jspx_dependants.put("jar:file:/Users/hidongmin37/web_1900_hds/jsp/cocoProject/src/main/webapp/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>번개장터 | 상품등록</title>\n");
      out.write("    <link rel=\"shortcut icon\" href=\"images/market/favicon.ico\">\n");
      out.write("\n");
      out.write("    <!--아이콘-->\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.min.css\" />\n");
      out.write("\n");
      out.write("    <!--부트스트랩-->\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\">\n");
      out.write("    <script defer src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("\n");
      out.write("    <!-- 공통 CSS -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/market/common.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/market/join.css\">\n");
      out.write("\n");
      out.write("    <!--CSS-->\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/goods/goods_selling_form.css\">\n");
      out.write("   \n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div id=\"wrapper\">\n");
      out.write("        <!-- header 영역 -->\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/app/fix/header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("        <!--메인 컨텐츠-->\n");
      out.write("        <div id=\"main_content\">\n");
      out.write("            <!--하위 메뉴-->\n");
      out.write("            <nav class=\"content_nav\">\n");
      out.write("                <a href=\"goods_selling_form.html\" class=\"active\">상품등록</a>\n");
      out.write("                <a href=\"market_manage.html\">상품관리</a>\n");
      out.write("                <a href=\"goods_buyer_ordersheet.html\">구매/판매 내역</a>\n");
      out.write("            </nav>\n");
      out.write("            \n");
      out.write("            <!--판매 폼-->\n");
      out.write("            <section class=\"goods_form\">\n");
      out.write("                <h2>기본정보 <span class=\"red\">*필수항목</span></h2>\n");
      out.write("                <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/item/writeOk.it\" class=\"frm_selling_goods\" name=\"writeForm\"  method=\"post\" enctype=\"multipart/form-data\">\n");
      out.write("                    <div class=\"goods_images_area\">\n");
      out.write("                        <p>상품이미지<span class=\"red\">*</span>\n");
      out.write("                            <span class=\"image_limit\">(<span class=\"image_num\"></span>/4)</span>\n");
      out.write("                        </p>\n");
      out.write("                        <div>\n");
      out.write("                            <div class=\"goods_images\">\n");
      out.write("                                <div>\n");
      out.write("                                    이미지 등록\n");
      out.write("									<input type=\"file\" name=\"goodsImage[]\" accept=\"image/jpg, image/jpeg, image/png\" multiple onchange=\"setImages(event);\">\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"preview_wrap\"></div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"goods_images_notice\">\n");
      out.write("                                <b>* 상품 이미지는 640x640에 최적화 되어 있습니다.</b><br>\n");
      out.write("                                - 상품 이미지는 PC에서는 1:1, 모바일에서는 1:1.23 비율로 보여집니다.<br>\n");
      out.write("                                - 이미지는 상품 등록 시 정사각형으로 잘려서 등록됩니다.<br>\n");
      out.write("                                - 이미지를 클릭할 경우 원본 이미지를 확인할 수 있습니다.<br>\n");
      out.write("                                - 이미지를 클릭 후 이동하여 등록순서를 변경할 수 있습니다.<br>\n");
      out.write("                                - 큰 이미지일 경우 이미지가 깨지는 경우가 발생할 수 있습니다.<br>\n");
      out.write("                                최대 지원 사이즈인 640 X 640으로 리사이즈 해서 올려주세요.(개당 이미지 최대 10M)\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"goods_title_area\">\n");
      out.write("                        <p>제목<span class=\"red\">*</span></p>\n");
      out.write("                        <div class=\"goods_title\">\n");
      out.write("                            <input type=\"text\" name=\"itemName\" id=\"goods_title\" maxlength=\"40\"\n");
      out.write("                                placeholder=\"상품 제목을 입력해주세요.\" oninput=\"countTitleLength(event);\">\n");
      out.write("                            <a href=\"#\">거래금지 품목</a>\n");
      out.write("                            <span class=\"goods_title_length\"><span></span>/40</span>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"goods_category_area\">\n");
      out.write("                        <p>카테고리<span class=\"red\">*</span></p>\n");
      out.write("                        <div>\n");
      out.write("                            <div class=\"goods_category\">\n");
      out.write("                                <div class=\"goods_Lcategory\">\n");
      out.write("	                                ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"goods_Scategory\">\n");
      out.write("                                    중분류 선택\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"goods_Scategory_cloth\">\n");
      out.write("                                    \n");
      out.write("                                </div>\n");
      out.write("                               \n");
      out.write("                            </div>\n");
      out.write("                            <p class=\"hidden\"><span>⊘</span> 상세 카테고리를 확인해주세요</p>\n");
      out.write("                            <p>선택한 카테고리 : \n");
      out.write("	                            <span class=\"selected_big_category\"></span>\n");
      out.write("	                            <span class=\"selected_sub_category\"></span>\n");
      out.write("	                            <span class=\"selected_sub2_category\"></span>\n");
      out.write("	                            <input type=\"hidden\" name=\"subCategory2Id\" id=\"subCategory2Id\" value=\"\">\n");
      out.write("	                         \n");
      out.write("                            </p>\n");
      out.write("                            \n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"goods_location_area\">\n");
      out.write("                        <p>거래지역<span class=\"red\">*</span></p>\n");
      out.write("                        <div class=\"goods_location\">\n");
      out.write("                            <div class=\"location_button_area\">\n");
      out.write("                                <button onclick=\"return false;\">내위치</button>\n");
      out.write("                                <button type=\"button\" onclick=\"findAddress()\">주소검색</button>\n");
      out.write("                                <button onclick=\"return false;\">지역설정안함</button>\n");
      out.write("                            </div>\n");
      out.write("                            <input type=\"text\"  id=\"address\" name=\"itemAddress\" readonly>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"goods_status_area\">\n");
      out.write("                        <p>상태<span class=\"red\">*</span></p>\n");
      out.write("                        <div class=\"goods_status\">\n");
      out.write("                            <input type=\"radio\" name=\"itemStatus\" value=\"true\" id=\"used\" checked>\n");
      out.write("                            <label for=\"used\">중고상품</label>\n");
      out.write("                            <input type=\"radio\" name=\"itemStatus\" value=\"false\" id=\"new\">\n");
      out.write("                            <label for=\"new\">새상품</label>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"goods_change_area\">\n");
      out.write("                        <p>교환<span class=\"red\">*</span></p>\n");
      out.write("                        <div class=\"goods_change\">\n");
      out.write("                            <input type=\"radio\" name=\"itemChangeBoolean\" value=\"true\" id=\"unable\" checked>\n");
      out.write("                            <label for=\"unable\">교환불가</label>\n");
      out.write("                            <input type=\"radio\" name=\"itemChangeBoolean\" value=\"false\" id=\"able\">\n");
      out.write("                            <label for=\"able\">교환가능</label>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"goods_price_area\">\n");
      out.write("                        <p>가격<span class=\"red\">*</span></p>\n");
      out.write("                        <div class=\"goods_price\">\n");
      out.write("                            <p><input type=\"text\" name=\"itemPrice\" placeholder=\"숫자만 입력해주세요\" oninput=\"valueIsNumber(event)\">원</p>\n");
      out.write("                            <input type=\"hidden\" name=\"shippingPrice\" value=\"false\">\n");
      out.write("                            <input type=\"checkbox\" name=\"shippingPrice\" id=\"shippingPrice\">\n");
      out.write("                            <label for=\"shippingPrice\">배송비 포함</label>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"goods_info_area\">\n");
      out.write("                        <p>설명<span class=\"red\">*</span></p>\n");
      out.write("                        <div>\n");
      out.write("                            <textarea name=\"itemDescription\" id=\"goodsInfo\" cols=\"30\" rows=\"10\"\n");
      out.write("                            maxlength=\"2000\" oninput=\"countInfoLength(event)\"></textarea>\n");
      out.write("                            <div class=\"goods_info_warn\">\n");
      out.write("                                <span>혹시 <a href=\"#\" onclick=\"return false;\">카카오톡ID</a>를 적으셨나요?</span>\n");
      out.write("                                <span class=\"info_length\"><span></span>/2000</span>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"goods_tag_area\">\n");
      out.write("                        <p>연관태그</p>\n");
      out.write("                        <div>\n");
      out.write("                            <div class=\"goods_tag\">\n");
      out.write("                                <div class=\"tag_button hidden\" onclick=\"tagDelete(event);\">\n");
      out.write("                                    <button onclick=\"return false;\"></button>\n");
      out.write("                                    <button onclick=\"return false;\" ><i class=\"fas fa-times\"></i></button>\n");
      out.write("                                </div>\n");
      out.write("                                <input type=\"text\" name=\"tag\" id=\"tag\" \n");
      out.write("                                    placeholder=\"연관태그를 입력해주세요. (최대5개)\"\n");
      out.write("                                >\n");
      out.write("                            </div>\n");
      out.write("                            <p>\n");
      out.write("                                - 태그는 띄어쓰기로 구분되며 최대 9자까지 입력할 수 있습니다.<br>\n");
      out.write("                                - 태그는 검색의 부가정보로 사용 되지만, 검색 결과 노출을 보장하지는 않습니다.<br>\n");
      out.write("                                - 상품과 직접 관련이 없는 다른 상품명, 브랜드, 스팸성 키워드 등을 입력하면 노출이 중단되거나 상품이 삭제될 수 있습니다.<br>\n");
      out.write("                            </p>\n");
      out.write("                        </div>\n");
      out.write("                        <input type=\"hidden\" name=\"tags\" id=\"hiddenTags\" value=\"\">\n");
      out.write("                        \n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"goods_count_area\">\n");
      out.write("                        <p>수량</p>\n");
      out.write("                        <p><input type=\"text\" name=\"itemCount\" value=\"1\" oninput=\"valueIsNumber(event)\">개</p> \n");
      out.write("                    </div>\n");
      out.write("                    <!--번개페이 뻐른 판매-->\n");
      out.write("                    <div class=\"fast_selling_area\">\n");
      out.write("                        <h2>빠른 판매 <span>내 상품에 안전결제 배지가 표시돼요 <a href=\"#\">자세히</a></span></h2>\n");
      out.write("                        <div class=\"goods_option_area\">\n");
      out.write("                            <p>옵션</p>\n");
      out.write("                            <div class=\"goods_option\">\n");
      out.write("                                <div class=\"checkbox_safePay\">\n");
      out.write("                                    <input type=\"checkbox\" name=\"protectedPayment\" id=\"protectedPayment\"  value=\"true\">\n");
      out.write("                                    <label for=\"protectedPayment\">\n");
      out.write("                                        안전결제 환영 \n");
      out.write("                                        <svg width=\"60\" height=\"24\" viewBox=\"0 0 35 16\" role=\"img\">\n");
      out.write("                                            <rect width=\"35\" height=\"16\" rx=\"2\" fill=\"#D80C18\"/>\n");
      out.write("                                            <path d=\"m9.226 3.003-.56 4.563h2.325a.05.05 0 0 1 .036.083l-5.024 5.388c-.033.035-.091.008-.085-.04l.56-4.563H4.153a.05.05 0 0 1-.036-.083L9.14 2.963a.05.05 0 0 1 .085.04zm11.803.706v8.59h-1.306V3.71h1.306zm8.447 0v8.59h-1.345V3.71h1.345zm-10.265.048v8.38h-1.288V8.138h-.776V6.875h.776V3.757h1.288zm5.398-.02c.353 0 .677.05.97.149.294.099.548.25.763.455.214.203.385.458.511.765.126.306.199.663.218 1.071a30.552 30.552 0 0 1 0 3.052 3.16 3.16 0 0 1-.218 1.076 2.2 2.2 0 0 1-.511.76 2.037 2.037 0 0 1-.762.455 3.031 3.031 0 0 1-.971.148c-.714 0-1.291-.2-1.733-.602-.442-.402-.685-1.015-.73-1.837a95.334 95.334 0 0 1-.033-.785 19.155 19.155 0 0 1 0-1.483c.01-.248.021-.51.034-.784.044-.823.287-1.435.729-1.836.442-.403 1.02-.604 1.733-.604zm-7.084.182v1.187h-.531l-.016 5.075.614-.024v1.167l-4.47.192v-1.187l.624-.024-.017-5.2h-.531V3.92h4.327zm7.084 1.005c-.165 0-.312.027-.44.081a.814.814 0 0 0-.337.268c-.095.124-.17.288-.227.492-.057.205-.095.46-.114.766-.025.376-.038.767-.038 1.172 0 .405.013.796.038 1.172.02.306.057.561.114.765.057.204.132.368.227.493a.82.82 0 0 0 .336.268c.13.054.276.08.44.08.165 0 .312-.026.44-.08a.82.82 0 0 0 .337-.268c.095-.125.17-.289.228-.493.056-.204.094-.46.113-.765a17.748 17.748 0 0 0 0-2.343 3.805 3.805 0 0 0-.113-.767 1.454 1.454 0 0 0-.228-.492.814.814 0 0 0-.336-.268 1.127 1.127 0 0 0-.44-.081zm-8.894.182h-.707l.016 5.15.675-.026.016-5.124z\" fill=\"#fff\"></path>\n");
      out.write("                                        </svg>\n");
      out.write("                                    </label>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"safe_pay_notice\">\n");
      out.write("                                    <div>\n");
      out.write("                                        <span class=\"check\"></span>\n");
      out.write("                                        <p>\n");
      out.write("                                            안전결제(번개페이) 요청을 거절하지 않는 대신 혜택을 받을 수 있어요.\n");
      out.write("                                            <br><small>거절 시,이용 제재가 있을 수 있으니 주의해 주세요.</small>\n");
      out.write("                                        </p>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div>\n");
      out.write("                                        <span class=\"check\"></span>\n");
      out.write("                                        <p>내 상품을 먼저 보여주는 전용 필터로 더 빠르게 판매할 수 있어요.</p>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div>\n");
      out.write("                                        <span class=\"check\"></span>\n");
      out.write("                                        <p>번개페이 배지로 더 많은 관심을 받을 수 있어요.</p>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                                <p>* 번개페이 배지와 전용 필터 기능은 앱 또는 모바일 웹에서만 볼 수 있어요.</p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                     <div class=\"btn_submit_area\">\n");
      out.write("        <div class=\"inner_submit\">\n");
      out.write("            <!--폼으로 등록 테스트 하실 때 type=submit으로 바꿔서 진행해주세요-->\n");
      out.write("            <input type=\"submit\" class=\"btn_goods_submit\" value=\"등록하기\">\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("                </form>\n");
      out.write("            </section>\n");
      out.write("        </div>\n");
      out.write("        <!-- footer 영역 -->\n");
      out.write("   \n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-latest.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("$(document).on('click', '.goods_Lcategory div', function() {\n");
      out.write("	\n");
      out.write("    const selectedBigCategory = $(this).text().trim();\n");
      out.write("    $('.selected_big_category').text(selectedBigCategory + ' >');\n");
      out.write("    console.log(selectedBigCategory)\n");
      out.write("    $.ajax({\n");
      out.write("        url: '/item/getSubCategories.it',\n");
      out.write("        type: 'POST',\n");
      out.write("        data: {\n");
      out.write("            bigCategoryName: selectedBigCategory\n");
      out.write("        },\n");
      out.write("        dataType: \"json\",\n");
      out.write("        success: function(response) {\n");
      out.write("            // 응답을 처리하여 중카테고리 목록을 생성\n");
      out.write("            let subCategoryHtml = '';\n");
      out.write("            let subCategoryText = '';\n");
      out.write("\n");
      out.write("            console.log(response);\n");
      out.write("            for(let subCategory of response) {\n");
      out.write("                subCategoryHtml += '<div>' + subCategory.name + '</div>';\n");
      out.write("                subCategoryText +=  subCategory.name;\n");
      out.write("                console.log(subCategory.name)\n");
      out.write("            }\n");
      out.write("			\n");
      out.write("            // 중카테고리 영역에 생성한 HTML을 삽입\n");
      out.write("            $('.goods_Scategory').html(subCategoryHtml);\n");
      out.write("        },\n");
      out.write("        error: function(error) {\n");
      out.write("            console.error(\"Error fetching subcategories: \", error);\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("});\n");
      out.write("\n");
      out.write("$(document).on('click', '.goods_Scategory div', function() {\n");
      out.write("    const selectedSubCategory = $(this).text().trim();\n");
      out.write("    $('.selected_sub_category').text(selectedSubCategory + ' >');\n");
      out.write("    $.ajax({\n");
      out.write("        url: '/item/getSub2Categories.it',\n");
      out.write("        type: 'POST',\n");
      out.write("        data: {\n");
      out.write("        	subCategoryName: selectedSubCategory\n");
      out.write("        },\n");
      out.write("        dataType: \"json\",\n");
      out.write("        success: function(response) {\n");
      out.write("            // 응답을 처리하여 중카테고리 목록을 생성\n");
      out.write("            let sub2CategoryHtml = '';\n");
      out.write("            for(let sub2Category of response) {\n");
      out.write("            	sub2CategoryHtml += '<div id='+ sub2Category.subCategory2Id +'>' + sub2Category.name + '</div>';\n");
      out.write("                console.log(sub2Category.subCategory2Id)\n");
      out.write("            }\n");
      out.write("			\n");
      out.write("            // 중카테고리 영역에 생성한 HTML을 삽입\n");
      out.write("            $('.goods_Scategory_cloth').html(sub2CategoryHtml);\n");
      out.write("        },\n");
      out.write("        error: function(error) {\n");
      out.write("            console.error(\"Error fetching subcategories: \", error);\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("});\n");
      out.write("$(document).on('click', '.goods_Scategory_cloth div', function() {\n");
      out.write("    const selectedSub2Category = $(this).text().trim();\n");
      out.write("    const selectedId = $(this).attr('id'); // 클릭한 div의 ID 값을 가져옵니다.\n");
      out.write("	console.log(selectedId)\n");
      out.write("    $('.selected_sub2_category').text(selectedSub2Category);\n");
      out.write("    $('#subCategory2Id').val(selectedId);\n");
      out.write("\n");
      out.write("});\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("<script>\n");
      out.write("    //본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.\n");
      out.write("    function findAddress() {\n");
      out.write("    	\n");
      out.write("        new daum.Postcode({\n");
      out.write("            oncomplete: function(data) {\n");
      out.write("        \n");
      out.write("                let roadAddr = data.roadAddress; // 도로명 주소 변수\n");
      out.write("                let extraRoadAddr = ''; // 참고 항목 변수\n");
      out.write("\n");
      out.write("              \n");
      out.write("                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\n");
      out.write("                    extraRoadAddr += data.bname;\n");
      out.write("                }\n");
      out.write("                // 건물명이 있고, 공동주택일 경우 추가한다.\n");
      out.write("                if(data.buildingName !== '' && data.apartment === 'Y'){\n");
      out.write("                   extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\n");
      out.write("                }\n");
      out.write("                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n");
      out.write("                if(extraRoadAddr !== ''){\n");
      out.write("                    extraRoadAddr = ' (' + extraRoadAddr + ')';\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                // 우편번호와 주소 정보를 해당 필드에 넣는다.\n");
      out.write("                document.getElementById(\"address\").value = roadAddr;\n");
      out.write("                \n");
      out.write("            }\n");
      out.write("        }).open();\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write(" <!-- 햄버거 메뉴 호버시 -->\n");
      out.write("<script>\n");
      out.write("	let contextPath = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("	\n");
      out.write("</script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/market/jquery-3.6.0.min.js\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/market/menu_hover.js\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/goods/goods_selling_form.js\" defer></script>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("										");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("										");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("									");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /app/item/plus.jsp(85,10) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty bigCategory and fn:length(bigCategory) > 0}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("											");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("										");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /app/item/plus.jsp(86,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("cat");
      // /app/item/plus.jsp(86,11) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/app/item/plus.jsp(86,11) '${bigCategory}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${bigCategory}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("												<div>\n");
            out.write("													");
            if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\n");
            out.write("												</div>\n");
            out.write("											");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /app/item/plus.jsp(88,13) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cat.getName()}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("											<div>\n");
          out.write("												기타\n");
          out.write("											</div>\n");
          out.write("										");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
